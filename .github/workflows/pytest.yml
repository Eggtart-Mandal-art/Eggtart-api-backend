name: CI
on: pull_request

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - name: Setup .env file
        run: |
          echo "DB_URL=$DB_URL" >> .env
          echo "DB_USER=$DB_USER" >> .env
          echo "DB_PASSWORD=$DB_PASSWORD" >> .env
          echo "DB_DATABASE=$DB_DATABASE" >> .env
          echo "JWT_SECRET_KEY=$JWT_SECRET_KEY" >> .env
          echo "JWT_ALGORITHM=$JWT_ALGORITHM" >> .env
        env:
          DB_URL: ${{secrets.DB_URL}}
          DB_USER: ${{secrets.DB_USER}}
          DB_PASSWORD: ${{secrets.DB_PASSWORD}}
          DB_DATABASE: ${{secrets.DB_DATABASE}}
          JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
          JWT_ALGORITHM: ${{secrets.JWT_ALGORITHM}}

      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install
      - name: Run the automated tests (for example)
        run: poetry run pytest -v -s
